{"version":3,"sources":["store/comment/actionTypes.js","component/Loading.jsx","serviceWorker.js","store/comment/reducer.js","store/index.js","store/isMobile/reducer.js","index.js"],"names":["ADD_COMMENT","REMOVE_COMMENT","loadingComponent","props","error","onClick","retry","timedOut","pastDelay","Loading","id","className","version","xmlns","x","y","width","height","viewBox","preserveAspectRatio","fontSize","style","letterSpacing","fontFamily","fill","attributeName","values","dur","repeatCount","d","stroke","strokeWidth","strokeMiterlimit","type","from","to","calcMode","keySplines","keyTimes","Component","loadable","loader","loading","Loadable","delay","timeout","Boolean","window","location","hostname","match","commentList","author","avatar","content","datetime","children","createStore","combineReducers","Comment","state","action","i","length","push","data","Array","concat","isMobile","hasOwnProperty","active","applyMiddleware","thunk","localStorage","getItem","primaryColor","less","modifyVars","App","Login","moment","locale","ReactDOM","render","zhCN","store","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.466c9d67.chunk.js","sourcesContent":["export const ADD_COMMENT = 'ADD_COMMENT'\r\n\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'","import React, { Component } from 'react';\r\nimport Loadable from 'react-loadable';\r\nimport '../assets/style/Loading/index.css'\r\n\r\n//通用的过场组件\r\nconst loadingComponent = (props) => {\r\n    if (props.error) {\r\n        return <div>Error! <button onClick={props.retry}>Retry</button></div>;\r\n    } else if (props.timedOut) {\r\n        return <div>Taking a long time... <button onClick={props.retry}>Retry</button></div>;\r\n    } else if (props.pastDelay) {\r\n        return <Loading></Loading>\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n//过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\r\nconst loadable = (loader, loading = loadingComponent) => {\r\n    return Loadable({\r\n        loader,\r\n        loading,\r\n        delay: 100, //页面加载超过这个ms，pastDelay为true，将显示加载标签\r\n        timeout: 10000 // 页面加载超时，timedOut属性为true，可提升展示刷新按钮\r\n    });\r\n}\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"loading\">\r\n                <div className=\"scene\">\r\n                    <svg version=\"1.1\" id=\"dc-spinner\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"38\" height=\"38\" viewBox=\"0 0 38 38\"\r\n                        preserveAspectRatio=\"xMinYMin meet\">\r\n                        <text x=\"14\" y=\"21\" fontSize=\"2px\" style={{letterSpacing:0.6,fontFamily:'Monaco'}} fill=\"grey\">LOADING\r\n                            <animate attributeName=\"opacity\" values=\"0;1;0\" dur=\"1.8s\" repeatCount=\"indefinite\" />\r\n                        </text>\r\n                        <path fill=\"#373a42\" d=\"M20,35c-8.271,0-15-6.729-15-15S11.729,5,20,5s15,6.729,15,15S28.271,35,20,35z M20,5.203\r\n                        C11.841,5.203,5.203,11.841,5.203,20c0,8.159,6.638,14.797,14.797,14.797S34.797,28.159,34.797,20\r\n                        C34.797,11.841,28.159,5.203,20,5.203z\">\r\n                        </path>\r\n\r\n                        <path fill=\"#373a42\" d=\"M20,33.125c-7.237,0-13.125-5.888-13.125-13.125S12.763,6.875,20,6.875S33.125,12.763,33.125,20\r\n                        S27.237,33.125,20,33.125z M20,7.078C12.875,7.078,7.078,12.875,7.078,20c0,7.125,5.797,12.922,12.922,12.922\r\n                        S32.922,27.125,32.922,20C32.922,12.875,27.125,7.078,20,7.078z\">\r\n                        </path>\r\n\r\n                        <path fill=\"#2AA198\" stroke=\"#2AA198\" strokeWidth=\"0.6027\" strokeMiterlimit=\"10\" d=\"M5.203,20\r\n                                c0-8.159,6.638-14.797,14.797-14.797V5C11.729,5,5,11.729,5,20s6.729,15,15,15v-0.203C11.841,34.797,5.203,28.159,5.203,20z\">\r\n                            <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 20 20\" to=\"360 20 20\" calcMode=\"spline\" keySplines=\"0.4, 0, 0.2, 1\"\r\n                                keyTimes=\"0;1\" dur=\"2s\" repeatCount=\"indefinite\" />\r\n                        </path>\r\n\r\n                        <path fill=\"#859900\" stroke=\"#859900\" strokeWidth=\"0.2027\" strokeMiterlimit=\"10\" d=\"M7.078,20\r\n                    c0-7.125,5.797-12.922,12.922-12.922V6.875C12.763,6.875,6.875,12.763,6.875,20S12.763,33.125,20,33.125v-0.203\r\n                    C12.875,32.922,7.078,27.125,7.078,20z\">\r\n                            <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 20 20\" to=\"360 20 20\" dur=\"1.8s\" repeatCount=\"indefinite\"\r\n                            />\r\n                        </path>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default loadable;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as type from './actionTypes'\r\nimport React from 'react'\r\n\r\nlet commentList = [{\r\n    id: '1',\r\n    author: 'Han Solo',\r\n    avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n    content: <p>456</p>,\r\n    datetime: '2019-09-09 10:00:00',\r\n    children: [\r\n        {\r\n            author: 'Han Solo',\r\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\r\n            content: <p>123</p>,\r\n            datetime: '2019-09-09 10:00:01',\r\n        }\r\n    ]\r\n}]\r\n\r\nexport const Comment = (state = commentList, action = {}) => {\r\n    switch (action.type) {\r\n        case type.ADD_COMMENT:\r\n            if (action.id) {\r\n                for (let i = 0; i < state.length; i++) {\r\n                    if (state[i].id === action.id) {\r\n                        state[i].children.push(action.data)\r\n                    }\r\n                }\r\n                return Array.from(state)\r\n            } else {\r\n                return state.concat(action.data);\r\n            }\r\n        case type.REMOVE_COMMENT:\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Comment } from './comment/reducer'\r\nimport isMobile from './isMobile/reducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nexport default createStore(combineReducers({ Comment, isMobile }), applyMiddleware(thunk))\r\n","let isMobile = false\r\n\r\nexport default (state = isMobile, action = {}) => {\r\n    if (action.type && action.hasOwnProperty('active')) {\r\n        return action.active\r\n    } else {\r\n        return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/es/locale/zh_CN';\r\nimport moment from 'moment';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/index'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport 'moment/locale/zh-cn';\r\nimport './assets/style/main.css';\r\nimport Loading from './component/Loading'\r\n\r\n// theme toggle color                                                                                                         \r\nif (localStorage.hasOwnProperty('@primary-color') && localStorage.getItem('@primary-color') !== '#1890ff') {\r\n    let primaryColor = localStorage.getItem('@primary-color');\r\n    primaryColor && window.less.modifyVars({\r\n        '@primary-color': primaryColor\r\n    });\r\n};\r\n\r\nconst App = Loading(() => import('./App'))\r\nconst Login = Loading(() => import('./page/login'))\r\n\r\nmoment.locale('zh-cn');\r\n\r\nReactDOM.render(\r\n    <ConfigProvider locale={zhCN}>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path='/login' render={props => {\r\n                        return <Login {...props} />\r\n                    }} />\r\n                    <Route path=\"/\" render={props => <App {...props} />}></Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </ConfigProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}