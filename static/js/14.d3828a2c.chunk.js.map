{"version":3,"sources":["page/swiper/swiper.js","page/swiper/index.jsx","assets/imgs/Swiper/a1.png","assets/imgs/Swiper/a2.png","assets/imgs/Swiper/a3.png","assets/imgs/Swiper/a4.png","assets/imgs/Swiper/a5.png"],"names":["window","requestAnimationFrame","a","setTimeout","cancelAnimationFrame","clearTimeout","FragmentBanner","option","this","whiteList","container","controller","view","btn","num","progre","grid","line","list","size","width","height","type","index","fnTime","boxTime","activeTime","Date","attrLenght","length","attr","undefined","i","init","document","querySelector","alert","e","style","elem","w","h","viewBox","Array","iL","j","jL","newI","createElement","setCss","left","top","opacity","backgroundImage","imgs","backgroundSize","backgroundPosition","appendChild","push","b","oB","innerHTML","setIndex","onclick","obj","show","switch","change","bind","n","nL","oI","numFind","querySelectorAll","p","oP","backgroundColor","className","timer","Math","random","order","anime","status","startTime","getTypeTime","endTime","max","ceil","test","getTime","json","c","filter","callback","goTime","cssJosn","currentStyle","getComputedStyle","start","end","key","parseFloat","ref","prop","val","call","delayFn","Swiper","state","Banner","props","isMobile","getElementById","offsetWidth","a1","a2","a3","a4","a5","clear","id","Component","connect","module","exports"],"mappings":"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","file":"static/js/14.d3828a2c.chunk.js","sourcesContent":["/* eslint-disable */\r\nwindow.requestAnimationFrame = window.requestAnimationFrame || function (a) {\r\n    return setTimeout(a, 1000 / 60)\r\n};\r\nwindow.cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;\r\nclass FragmentBanner {\r\n    constructor(option) {\r\n        //实例化时，可传的参数\r\n        this.whiteList = ['container', 'controller', 'size', 'imgs', 'size', 'grid', 'index', 'fnTime',\r\n            'boxTime', 'type'\r\n        ];\r\n\r\n        //容器将包容控制器\r\n        this.container = '.banner';\r\n\r\n        //默认的控制器\r\n        this.controller = {\r\n            view: '.banner-view',\r\n            btn: '.banner-btn',\r\n            num: '.banner-number',\r\n            progre: '.banner-progres'\r\n        };\r\n\r\n        //栅格 行*列\r\n        this.grid = {\r\n            line: 5,\r\n            list: 10\r\n        };\r\n\r\n        //容器的大小\r\n        this.size = {\r\n            width: 1200,\r\n            height: 675,\r\n        };\r\n\r\n        //切换类型\r\n        this.type = 1;\r\n\r\n        //索引位置\r\n        this.index = 0;\r\n\r\n        //函数每次切换时间\r\n        this.fnTime = 5000;\r\n\r\n        //栅格每次运动时间\r\n        this.boxTime = 2000;\r\n\r\n        //栅格运动结束的时间\r\n        this.activeTime = new Date();\r\n\r\n        for (var a = 0, attrLenght = this.whiteList.length; a < attrLenght; a++) {\r\n            var attr = this.whiteList[a];\r\n            if (option[attr] !== undefined) {\r\n                this[attr] = option[attr];\r\n            }\r\n        }\r\n        for (var i in option) {\r\n            if (this.whiteList[i] !== undefined) {\r\n                ;\r\n            }\r\n        }\r\n\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.container = document.querySelector(this.container)\r\n        if (!this.container) {\r\n            return alert('获取banner容器失败');\r\n        } else {\r\n            this.container.style.width = this.size.width + 'px';\r\n            this.container.style.height = this.size.height + 'px';\r\n        }\r\n\r\n        this.elem = {};\r\n        for (var e in this.controller) {\r\n            this.elem[e] = this.container.querySelector(this.controller[e]);\r\n            if (this.elem[e] === null) {\r\n                return alert('获取' + e + '容器');\r\n            }\r\n        }\r\n\r\n        //栅格\r\n        var w = this.size.width / this.grid.list,\r\n            h = this.size.height / this.grid.line;\r\n\r\n        this.elem.viewBox = new Array();\r\n        for (var i = 0, iL = this.grid.line; i < iL; i++) {\r\n            for (var j = 0, jL = this.grid.list; j < jL; j++) {\r\n                var newI = document.createElement('i');\r\n                this.setCss(newI, {\r\n                    width: w + 'px',\r\n                    height: h + 'px',\r\n                    left: 0,\r\n                    top: 0,\r\n                    opacity: 1,\r\n                    backgroundImage: 'url(\"' + this.imgs[this.index] + '\")',\r\n                    backgroundSize: this.size.width + 'px ' + this.size.height + 'px',\r\n                    backgroundPosition: w * -j + 'px ' + h * -i + 'px'\r\n                });\r\n                this.elem.view.appendChild(newI);\r\n                this.elem.viewBox.push(newI);\r\n            }\r\n        }\r\n\r\n        //按钮动作\r\n        for (var b = 1; b >= 0; b--) {\r\n            var oB = document.createElement('span');\r\n            (b) ? oB.innerHTML = '&lt;' : oB.innerHTML = '&gt;';\r\n            oB.setIndex = b;\r\n            oB.onclick = function (obj) {\r\n                this.show({\r\n                    switch: true,\r\n                    change: obj.setIndex === 0\r\n                });\r\n            }.bind(this, oB);\r\n            this.elem.btn.appendChild(oB);\r\n        }\r\n\r\n        //数量\r\n        for (var n = 0, nL = this.imgs.length; n < nL; n++) {\r\n            var oI = document.createElement('i');\r\n            oI.setIndex = n;\r\n            oI.onclick = function (obj) {\r\n                //显示动画\r\n                this.show({\r\n                    switch: true,\r\n                    change: obj.setIndex\r\n                });\r\n            }.bind(this, oI)\r\n            this.elem.num.appendChild(oI);\r\n        }\r\n        this.elem.numFind = this.elem.num.querySelectorAll('i');\r\n\r\n        //进度条\r\n        this.progre = new Array;\r\n        for (var p = 1; p >= 0; p--) {\r\n            var oP = document.createElement('i');\r\n            this.setCss(oP, {\r\n                width: 0,\r\n                backgroundColor: p ? '#00c3ff' : '#ffc300'\r\n            });\r\n            this.elem.progre.appendChild(oP);\r\n            this.progre.push(oP);\r\n        }\r\n\r\n        //显示动画\r\n        this.show();\r\n        this.elem.numFind[this.index].className = 'on';\r\n    }\r\n\r\n    setIndex() {\r\n        this.index %= this.imgs.length;\r\n        this.index = (this.index < 0) ? this.imgs.length - 1 : this.index;\r\n        this.elem.numFind[this.index].className = 'on';\r\n    }\r\n\r\n    getTypeTime() {\r\n        var timer = new Array();\r\n        switch (this.type) {\r\n            case 1:\r\n                timer.push(this.boxTime / 4 + Math.random() * this.boxTime / 4);\r\n                timer.push(timer[0]);\r\n                break;\r\n            default:\r\n                timer.push([Math.random() * this.boxTime / 5, this.boxTime / 10 * 3]);\r\n                timer.push(timer[0][0] + timer[0][1]);\r\n                break;\r\n        }\r\n        return timer;\r\n    }\r\n\r\n    show(order) {\r\n        order = order || {};\r\n        if (new Date() >= this.activeTime) {\r\n            this.elem.numFind[this.index].className = '';\r\n            //下次播放动画时候的进度条\r\n            this.setCss(this.progre[1], {\r\n                width: 0\r\n            }).anime(this.progre[1], {\r\n                width: this.size.width\r\n            }, this.fnTime, function () {\r\n                this.show({\r\n                    switch: true,\r\n                    change: true\r\n                });\r\n            }.bind(this));\r\n            var status = true,\r\n                activeTime = 0;\r\n            for (var i = 0, iL = this.elem.viewBox.length; i < iL; i++) {\r\n                var startTime = this.getTypeTime(),\r\n                    endTime = this.getTypeTime(),\r\n                    obj = this.elem.viewBox[i];\r\n\r\n                activeTime = Math.max(activeTime, startTime[1] + endTime[1]);\r\n\r\n                this.anime(obj, {\r\n                    left: Math.ceil(Math.random() * this.size.width * 2 - this.size.width),\r\n                    top: Math.ceil(Math.random() * this.size.height * 2 - this.size.height),\r\n                    opacity: 0\r\n                }, startTime[0], function (obj) {\r\n                    if (order.switch && status) {\r\n                        if (/number/i.test(typeof order.change)) {\r\n                            this.index = order.change;\r\n                        } else {\r\n                            (order.change) ? ++this.index : --this.index;\r\n                        }\r\n                        this.setIndex();\r\n                        this.elem.numFind[this.index].className = 'on';\r\n                        status = false;\r\n                    }\r\n\r\n                    this.setCss(obj, {\r\n                        backgroundImage: 'url(\"' + this.imgs[this.index] + '\")'\r\n                    }).anime(obj, {\r\n                        left: 0,\r\n                        top: 0,\r\n                        opacity: 1\r\n                    }, endTime[0]);\r\n                }.bind(this, obj));\r\n            }\r\n\r\n            //栅格结束运动的时间\r\n            this.activeTime = new Date(new Date().getTime() + activeTime);\r\n\r\n            this.setCss(this.progre[0], {\r\n                width: 0\r\n            }).anime(this.progre[0], {\r\n                width: this.size.width\r\n            }, activeTime);\r\n        }\r\n    }\r\n\r\n    setCss(obj, json) {\r\n        for (var c in json) {\r\n            if (c === 'opacity') {\r\n                obj.style.opacity = c;\r\n                obj.style.filter = \"alpha(opacity=\" + (json[c] * 100) + \")\";\r\n            } else {\r\n                obj.style[c] = json[c];\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    anime(obj, attr, endTime, callback) {\r\n        (obj.timer) && cancelAnimationFrame(obj.timer);\r\n        var cssJosn = obj.currentStyle || getComputedStyle(obj, null),\r\n            start = {},\r\n            end = {},\r\n            goTime;\r\n\r\n        //设置初始属性值和结束属性值\r\n        for (var key in attr) {\r\n            if (attr[key] !== parseFloat(cssJosn[key])) {\r\n                start[key] = parseFloat(cssJosn[key]);\r\n                end[key] = attr[key] - start[key];\r\n            }\r\n        }\r\n\r\n        goTime = new Date();\r\n        if (endTime instanceof Array) {\r\n            (function delayFn() {\r\n                if ((new Date() - goTime) >= endTime[0]) {\r\n                    endTime = endTime[1];\r\n                    goTime = new Date();\r\n                    ref();\r\n                } else {\r\n\r\n                    obj.timer = requestAnimationFrame(delayFn);\r\n                }\r\n            })();\r\n        } else {\r\n            ref();\r\n        }\r\n\r\n        function ref() {\r\n            var prop = (new Date() - goTime) / endTime;\r\n            (prop >= 1) ? prop = 1 : obj.timer = requestAnimationFrame(ref);\r\n            for (var key in start) {\r\n                var val = -end[key] * prop * (prop - 2) + start[key];\r\n                if (key === 'opacity') {\r\n                    obj.style.opacity = val;\r\n                    obj.style.filter = \"alpha(opacity=\" + (val * 100) + \")\";\r\n                } else {\r\n                    obj.style[key] = val + 'px';\r\n                }\r\n            }\r\n            (prop === 1) && callback && callback.call(obj);\r\n        };\r\n    }\r\n\r\n    clear() {\r\n        this.anime = function () { }\r\n    }\r\n}\r\n\r\nexport default FragmentBanner;\r\n","import React, { Component } from 'react';\r\nimport FragmentBanner from './swiper'\r\nimport { connect } from 'react-redux';\r\nimport a1 from '../../assets/imgs/Swiper/a1.png'\r\nimport a2 from '../../assets/imgs/Swiper/a2.png'\r\nimport a3 from '../../assets/imgs/Swiper/a3.png'\r\nimport a4 from '../../assets/imgs/Swiper/a4.png'\r\nimport a5 from '../../assets/imgs/Swiper/a5.png'\r\n\r\nclass Swiper extends Component {\r\n    state = {\r\n        Banner: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init()\r\n    }\r\n\r\n    init = () => {\r\n        let width = this.props.isMobile ? document.getElementById('centent').offsetWidth : document.getElementById('centent').offsetWidth - 30\r\n        this.Banner = new FragmentBanner({\r\n            container: '#banner_one', //选择容器 必选\r\n            imgs: [a1, a2, a3, a4, a5], //图片集合\r\n            size: {\r\n                width,\r\n                height: 400\r\n            },\r\n            type: 2,\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.Banner.clear()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"banner\" id=\"banner_one\">\r\n                <div className=\"banner-view\"></div>\r\n                <div className=\"banner-btn\"></div>\r\n                <div className=\"banner-number\"></div>\r\n                <div className=\"banner-progres\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => ({\r\n    isMobile: state.isMobile\r\n}))(Swiper);\r\n/**\r\n * 2019-09-09 炫酷的轮播图效果\r\n */","module.exports = __webpack_public_path__ + \"static/media/a1.59fe16dc.png\";","module.exports = __webpack_public_path__ + \"static/media/a2.e4c1619e.png\";","module.exports = __webpack_public_path__ + \"static/media/a3.2f4a55f0.png\";","module.exports = __webpack_public_path__ + \"static/media/a4.241b9dfc.png\";","module.exports = __webpack_public_path__ + \"static/media/a5.98bf5920.png\";"],"sourceRoot":""}