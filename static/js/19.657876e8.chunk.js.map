{"version":3,"sources":["page/chart/echarts_China.jsx"],"names":["Echarts","getOption","geoGpsMap","geoCoordMap","colors","year","mapData","categoryData","barData","key","push","randomNum","i","length","j","value","echarts","registerMap","gaoJSON","convertData","data","res","geoCoord","name","concat","convertToLineData","gps","dataItem","fromCoord","toCoord","coord","optionXyMap01","timeline","axisType","autoPlay","playInterval","left","right","bottom","width","label","normal","textStyle","color","emphasis","symbolSize","lineStyle","checkpointStyle","borderColor","borderWidth","controlStyle","showNextBtn","showPrevBtn","baseOption","animation","animationDuration","animationEasing","animationDurationUpdate","animationEasingUpdate","grid","top","tooltip","trigger","axisPointer","type","shadowStyle","geo","show","map","roam","zoom","center","itemStyle","areaColor","x","y","r","colorStops","offset","globalCoord","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","options","n","backgroundColor","xAxis","scale","position","min","boundaryGap","splitLine","axisLine","axisTick","axisLabel","margin","yAxis","nameGap","interval","series","coordinateSystem","val","formatter","geoIndex","aspectScale","showLegendSymbol","sort","a","b","slice","showEffectOn","rippleEffect","brushType","hoverAnimation","zlevel","effect","period","trailLength","symbol","opacity","curveness","Math","ceil","random","minNum","maxNum","arguments","parseInt","option","this","style","height","Component"],"mappings":"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","file":"static/js/19.657876e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport echarts from 'echarts/lib/echarts'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport gaoJSON from './config.json'\r\n\r\nclass Echarts extends Component {\r\n\r\n    getOption = () => {\r\n        let geoGpsMap = {\r\n            '1': [109.1162, 34.2004],\r\n            '2': [116.4551, 40.2539],\r\n            '3': [113.12244, 23.009505],\r\n            '4': [87.9236, 43.5883],\r\n            '5': [127.9688, 45.368],\r\n            '6': [91.11, 29.97],\r\n        };\r\n        let geoCoordMap = {\r\n            '黑龙江': [127.9688, 45.368],\r\n            '内蒙古': [110.3467, 41.4899],\r\n            \"吉林\": [125.8154, 44.2584],\r\n            '北京市': [116.4551, 40.2539],\r\n            \"辽宁\": [123.1238, 42.1216],\r\n            \"河北\": [114.4995, 38.1006],\r\n            \"天津\": [117.4219, 39.4189],\r\n            \"山西\": [112.3352, 37.9413],\r\n            \"陕西\": [109.1162, 34.2004],\r\n            \"甘肃\": [103.5901, 36.3043],\r\n            \"宁夏\": [106.3586, 38.1775],\r\n            \"青海\": [101.4038, 36.8207],\r\n            \"新疆\": [87.9236, 43.5883],\r\n            \"西藏\": [91.11, 29.97],\r\n            \"四川\": [103.9526, 30.7617],\r\n            \"重庆\": [108.384366, 30.439702],\r\n            \"山东\": [117.1582, 36.8701],\r\n            \"河南\": [113.4668, 34.6234],\r\n            \"江苏\": [118.8062, 31.9208],\r\n            \"安徽\": [117.29, 32.0581],\r\n            \"湖北\": [114.3896, 30.6628],\r\n            \"浙江\": [119.5313, 29.8773],\r\n            \"福建\": [119.4543, 25.9222],\r\n            \"江西\": [116.0046, 28.6633],\r\n            \"湖南\": [113.0823, 28.2568],\r\n            \"贵州\": [106.6992, 26.7682],\r\n            \"云南\": [102.9199, 25.4663],\r\n            \"广东\": [113.12244, 23.009505],\r\n            \"广西\": [108.479, 23.1152],\r\n            \"海南\": [110.3893, 19.8516],\r\n            '上海': [121.4648, 31.2891],\r\n        };\r\n\r\n        let colors = [\r\n            [\"#1DE9B6\", \"#F46E36\", \"#04B9FF\", \"#5DBD32\", \"#FFC809\", \"#FB95D5\", \"#BDA29A\", \"#6E7074\", \"#546570\", \"#C4CCD3\"],\r\n            [\"#37A2DA\", \"#67E0E3\", \"#32C5E9\", \"#9FE6B8\", \"#FFDB5C\", \"#FF9F7F\", \"#FB7293\", \"#E062AE\", \"#E690D1\", \"#E7BCF3\", \"#9D96F5\", \"#8378EA\", \"#8378EA\"],\r\n            [\"#DD6B66\", \"#759AA0\", \"#E69D87\", \"#8DC1A9\", \"#EA7E53\", \"#EEDD78\", \"#73A373\", \"#73B9BC\", \"#7289AB\", \"#91CA8C\", \"#F49F42\"],\r\n        ];\r\n        let colorIndex = 0;\r\n\r\n        let year = [\"2014\", \"2015\", \"2016\", \"2017\", \"2018\"];\r\n        let mapData = [\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            [],\r\n            []\r\n        ];\r\n\r\n        /*柱子Y名称*/\r\n        let categoryData = [];\r\n        let barData = [];\r\n        for (let key in geoCoordMap) {\r\n            categoryData.push(key);\r\n            mapData[0].push({\r\n                \"year\": '2014',\r\n                \"name\": key,\r\n                \"value\": randomNum(100, 300)\r\n            });\r\n            mapData[1].push({\r\n                \"year\": '2015',\r\n                \"name\": key,\r\n                \"value\": randomNum(100, 300)\r\n            });\r\n            mapData[2].push({\r\n                \"year\": '2016',\r\n                \"name\": key,\r\n                \"value\": randomNum(100, 300)\r\n            });\r\n            mapData[3].push({\r\n                \"year\": '2017',\r\n                \"name\": key,\r\n                \"value\": randomNum(100, 300)\r\n            });\r\n            mapData[4].push({\r\n                \"year\": '2018',\r\n                \"name\": key,\r\n                \"value\": randomNum(100, 300)\r\n            });\r\n\r\n        }\r\n        for (let i = 0; i < mapData.length; i++) {\r\n            barData.push([]);\r\n            for (let j = 0; j < mapData[i].length; j++) {\r\n                barData[i].push(mapData[i][j].value)\r\n            }\r\n        }\r\n\r\n        echarts.registerMap('china', gaoJSON);\r\n        let convertData = function (data) {\r\n            let res = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let geoCoord = geoCoordMap[data[i].name];\r\n                if (geoCoord) {\r\n                    res.push({\r\n                        name: data[i].name,\r\n                        value: geoCoord.concat(data[i].value)\r\n                    });\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n\r\n        let convertToLineData = function (data, gps) {\r\n            let res = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let dataItem = data[i];\r\n                let fromCoord = geoCoordMap[dataItem.name];\r\n                let toCoord = gps; //郑州\r\n                //  let toCoord = geoGps[Math.random()*3]; \r\n                if (fromCoord && toCoord) {\r\n                    res.push([{\r\n                        coord: fromCoord,\r\n                        value: dataItem.value\r\n                    }, {\r\n                        coord: toCoord,\r\n                    }]);\r\n                }\r\n            }\r\n            return res;\r\n        };\r\n\r\n        let optionXyMap01 = {\r\n            timeline: {\r\n                data: year,\r\n                axisType: 'category',\r\n                autoPlay: true,\r\n                playInterval: 3000,\r\n                left: '10%',\r\n                right: '10%',\r\n                bottom: '3%',\r\n                width: '80%',\r\n                //  height: null,\r\n                label: {\r\n                    normal: {\r\n                        textStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    emphasis: {\r\n                        textStyle: {\r\n                            color: '#fff'\r\n                        }\r\n                    }\r\n                },\r\n                symbolSize: 10,\r\n                lineStyle: {\r\n                    color: '#555'\r\n                },\r\n                checkpointStyle: {\r\n                    borderColor: '#777',\r\n                    borderWidth: 2\r\n                },\r\n                controlStyle: {\r\n                    showNextBtn: true,\r\n                    showPrevBtn: true,\r\n                    normal: {\r\n                        color: '#666',\r\n                        borderColor: '#666'\r\n                    },\r\n                    emphasis: {\r\n                        color: '#aaa',\r\n                        borderColor: '#aaa'\r\n                    }\r\n                },\r\n\r\n            },\r\n            baseOption: {\r\n                animation: true,\r\n                animationDuration: 1000,\r\n                animationEasing: 'cubicInOut',\r\n                animationDurationUpdate: 1000,\r\n                animationEasingUpdate: 'cubicInOut',\r\n                grid: {\r\n                    right: '1%',\r\n                    top: '15%',\r\n                    bottom: '10%',\r\n                    width: '20%'\r\n                },\r\n                tooltip: {\r\n                    trigger: 'axis', // hover触发器\r\n                    axisPointer: { // 坐标轴指示器，坐标轴触发有效\r\n                        type: 'shadow', // 默认为直线，可选为：'line' | 'shadow'\r\n                        shadowStyle: {\r\n                            color: 'rgba(150,150,150,0.1)' //hover颜色\r\n                        }\r\n                    }\r\n                },\r\n                geo: {\r\n                    show: true,\r\n                    map: 'china',\r\n                    roam: true,\r\n                    zoom: 1,\r\n                    center: [113.83531246, 34.0267395887],\r\n                    label: {\r\n                        emphasis: {\r\n                            show: false\r\n                        }\r\n                    },\r\n                    itemStyle: {\r\n                        normal: {\r\n                            borderColor: 'rgba(147, 235, 248, 1)',\r\n                            borderWidth: 1,\r\n                            areaColor: {\r\n                                type: 'radial',\r\n                                x: 0.5,\r\n                                y: 0.5,\r\n                                r: 0.8,\r\n                                colorStops: [{\r\n                                    offset: 0,\r\n                                    color: 'rgba(147, 235, 248, 0)' // 0% 处的颜色\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: 'rgba(147, 235, 248, .2)' // 100% 处的颜色\r\n                                }],\r\n                                globalCoord: false // 缺省为 false\r\n                            },\r\n                            shadowColor: 'rgba(128, 217, 248, 1)',\r\n                            // shadowColor: 'rgba(255, 255, 255, 1)',\r\n                            shadowOffsetX: -2,\r\n                            shadowOffsetY: 2,\r\n                            shadowBlur: 10\r\n                        },\r\n                        emphasis: {\r\n                            areaColor: '#389BB7',\r\n                            borderWidth: 0\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n            options: []\r\n\r\n        };\r\n        for (let n = 0; n < year.length; n++) {\r\n            optionXyMap01.options.push({\r\n                backgroundColor: '#000',\r\n                // title: [{\r\n                //     /* text: '地图',\r\n                //      subtext: '内部数据请勿外传',\r\n                //      left: 'center',\r\n                //      textStyle: {\r\n                //          color: '#fff'\r\n                //      }*/\r\n                // },\r\n                // {\r\n                //     id: 'statistic',\r\n                //     text: year[n] + \"年数据统计情况\",\r\n                //     left: '75%',\r\n                //     top: '8%',\r\n                //     textStyle: {\r\n                //         color: '#fff',\r\n                //         fontSize: 30\r\n                //     }\r\n                // }\r\n                // ],\r\n                xAxis: {\r\n                    type: 'value',\r\n                    scale: true,\r\n                    position: 'top',\r\n                    min: 0,\r\n                    boundaryGap: false,\r\n                    splitLine: {\r\n                        show: false\r\n                    },\r\n                    axisLine: {\r\n                        show: false\r\n                    },\r\n                    axisTick: {\r\n                        show: false\r\n                    },\r\n                    axisLabel: {\r\n                        margin: 2,\r\n                        textStyle: {\r\n                            color: '#aaa'\r\n                        }\r\n                    },\r\n                },\r\n                yAxis: {\r\n                    type: 'category',\r\n                    //  name: 'TOP 20',\r\n                    nameGap: 16,\r\n                    axisLine: {\r\n                        show: true,\r\n                        lineStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    axisTick: {\r\n                        show: false,\r\n                        lineStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    axisLabel: {\r\n                        interval: 0,\r\n                        textStyle: {\r\n                            color: '#ddd'\r\n                        }\r\n                    },\r\n                    data: categoryData\r\n                },\r\n                series: [\r\n                    //未知作用\r\n                    {\r\n                        //文字和标志\r\n                        name: 'light',\r\n                        type: 'scatter',\r\n                        coordinateSystem: 'geo',\r\n                        data: convertData(mapData[n]),\r\n                        symbolSize: function (val) {\r\n                            return val[2] / 10;\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                formatter: '{b}',\r\n                                position: 'right',\r\n                                show: true\r\n                            },\r\n                            emphasis: {\r\n                                show: true\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n]\r\n                            }\r\n                        }\r\n                    },\r\n                    //地图？\r\n                    {\r\n                        type: 'map',\r\n                        map: 'china',\r\n                        geoIndex: 0,\r\n                        aspectScale: 0.75, //长宽比\r\n                        showLegendSymbol: false, // 存在legend时显示\r\n                        label: {\r\n                            normal: {\r\n                                show: false\r\n                            },\r\n                            emphasis: {\r\n                                show: false,\r\n                                textStyle: {\r\n                                    color: '#fff'\r\n                                }\r\n                            }\r\n                        },\r\n                        roam: true,\r\n                        itemStyle: {\r\n                            normal: {\r\n                                areaColor: '#031525',\r\n                                borderColor: '#FFFFFF',\r\n                            },\r\n                            emphasis: {\r\n                                areaColor: '#2B91B7'\r\n                            }\r\n                        },\r\n                        animation: false,\r\n                        data: mapData\r\n                    },\r\n                    //地图点的动画效果\r\n                    {\r\n                        //  name: 'Top 5',\r\n                        type: 'effectScatter',\r\n                        coordinateSystem: 'geo',\r\n                        data: convertData(mapData[n].sort(function (a, b) {\r\n                            return b.value - a.value;\r\n                        }).slice(0, 20)),\r\n                        symbolSize: function (val) {\r\n                            return val[2] / 10;\r\n                        },\r\n                        showEffectOn: 'render',\r\n                        rippleEffect: {\r\n                            brushType: 'stroke'\r\n                        },\r\n                        hoverAnimation: true,\r\n                        label: {\r\n                            normal: {\r\n                                formatter: '{b}',\r\n                                position: 'right',\r\n                                show: true\r\n                            }\r\n                        },\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n],\r\n                                shadowBlur: 10,\r\n                                shadowColor: colors[colorIndex][n]\r\n                            }\r\n                        },\r\n                        zlevel: 1\r\n                    },\r\n                    //地图线的动画效果\r\n                    {\r\n                        type: 'lines',\r\n                        zlevel: 2,\r\n                        effect: {\r\n                            show: true,\r\n                            period: 4, //箭头指向速度，值越小速度越快\r\n                            trailLength: 0.02, //特效尾迹长度[0,1]值越大，尾迹越长重\r\n                            symbol: 'arrow', //箭头图标\r\n                            symbolSize: 3, //图标大小\r\n                        },\r\n                        lineStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n],\r\n                                width: 0.1, //尾迹线条宽度\r\n                                opacity: 0.5, //尾迹线条透明度\r\n                                curveness: .3 //尾迹线条曲直度\r\n                            }\r\n                        },\r\n                        data: convertToLineData(mapData[n], geoGpsMap[Math.ceil(Math.random() * 6)])\r\n                    },\r\n                    // 柱状图\r\n                    {\r\n                        zlevel: 1.5,\r\n                        type: 'bar',\r\n                        symbol: 'none',\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: colors[colorIndex][n]\r\n                            }\r\n                        },\r\n                        data: barData[n]\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n\r\n        function randomNum(minNum, maxNum) {\r\n            switch (arguments.length) {\r\n                case 1:\r\n                    return parseInt(Math.random() * minNum + 1, 10);\r\n                case 2:\r\n                    return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\r\n                default:\r\n                    return 0;\r\n            }\r\n        }\r\n        return optionXyMap01\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ReactEcharts option={this.getOption()} style={{ height: '600px',width:'100%' }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Echarts;\r\n/**\r\n * 2019-09-10 使用echars绘制的中国地图 地址：https://www.echartsjs.com/zh/index.html\r\n */\r\n"],"sourceRoot":""}